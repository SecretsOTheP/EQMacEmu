  Building Custom Rule C:/EQMacEmu/libs/luabind/CMakeLists.txt
  CMake does not need to re-run because C:/EQMacEmu/Build/libs/luabind/CMakeFiles/generate.stamp is up-to-date.
  class.cpp
  class_info.cpp
  class_registry.cpp
  class_rep.cpp
  create_class.cpp
  error.cpp
  exception_handler.cpp
  function.cpp
C:\local\boost_1_81_0\boost/bind.hpp(41): message : The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.
  inheritance.cpp
C:\local\boost_1_81_0\boost/bind.hpp(41): message : The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.
C:\local\boost_1_81_0\boost/bind.hpp(41): message : The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.
C:\local\boost_1_81_0\boost/bind.hpp(41): message : The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.
C:\local\boost_1_81_0\boost/bind.hpp(41): message : The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.
  link_compatibility.cpp
  object_rep.cpp
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility(186,48): warning C4267: 'initializing': conversion from 'size_t' to '_Ty2', possible loss of data
          with
          [
              _Ty2=int
          ] (compiling source file C:\EQMacEmu\libs\luabind\src\inheritance.cpp)
C:\EQMacEmu\libs\luabind\src\inheritance.cpp(97): message : see reference to function template instantiation 'std::pair<ptrdiff_t,int>::pair<ptrdiff_t&,size_t&,0>(_Other1,_Other2) noexcept' being compiled
          with
          [
              _Other1=ptrdiff_t &,
              _Other2=size_t &
          ]
C:\EQMacEmu\libs\luabind\src\inheritance.cpp(95): message : see reference to function template instantiation 'std::pair<ptrdiff_t,int>::pair<ptrdiff_t&,size_t&,0>(_Other1,_Other2) noexcept' being compiled
          with
          [
              _Other1=ptrdiff_t &,
              _Other2=size_t &
          ]
  open.cpp
  pcall.cpp
C:\local\boost_1_81_0\boost/bind.hpp(41): message : The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.
  scope.cpp
  stack_content_by_name.cpp
C:\local\boost_1_81_0\boost/bind.hpp(41): message : The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.
  weak_ref.cpp
  wrapper_base.cpp
  luabind.vcxproj -> C:\EQMacEmu\Build\bin\RelWithDebInfo\luabind.lib
